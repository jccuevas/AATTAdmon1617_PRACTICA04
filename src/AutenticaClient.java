
import java.io.FileOutputStream;
import java.io.IOException;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.Provider;
import java.security.cert.X509Certificate;
import java.security.interfaces.RSAPublicKey;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Juan Carlos
 */
public class AutenticaClient extends javax.swing.JFrame {

    public static User user = new User();

    /**
     * Creates new form NewJFrame
     */
    public AutenticaClient() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonAutentica = new javax.swing.JButton();
        jLabelName = new javax.swing.JLabel();
        jName = new javax.swing.JLabel();
        jButtonGrabar = new javax.swing.JButton();
        jLabel_apellidos = new javax.swing.JLabel();
        jLabel_dni = new javax.swing.JLabel();
        jApellidos = new javax.swing.JLabel();
        jDNI = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("Bundle"); // NOI18N
        setTitle(bundle.getString("app_title")); // NOI18N

        jButtonAutentica.setText(bundle.getString("main_button_autenticate")); // NOI18N
        jButtonAutentica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAutenticaActionPerformed(evt);
            }
        });

        jLabelName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelName.setText("Nombre:");

        jName.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jName.setText("nombre");

        jButtonGrabar.setText("Graba certificado");
        jButtonGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGrabarActionPerformed(evt);
            }
        });

        jLabel_apellidos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel_apellidos.setText("Apellidos:");

        jLabel_dni.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel_dni.setText("DNI:");

        jApellidos.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jApellidos.setText("apellidos");

        jDNI.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jDNI.setText("dni");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonGrabar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonAutentica))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel_apellidos)
                                    .addComponent(jLabel_dni))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDNI)
                                    .addComponent(jApellidos))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jName)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelName)
                    .addComponent(jName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_apellidos)
                    .addComponent(jApellidos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_dni)
                    .addComponent(jDNI))
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAutentica)
                    .addComponent(jButtonGrabar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAutenticaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAutenticaActionPerformed
        try {
            iniKeyStore();
            doAuth("hola");
        } catch (SignatureError ex) {
            Logger.getLogger(AutenticaClient.class.getName()).log(Level.SEVERE, null, ex);
        } catch (KeyStoreException ex) {
            Logger.getLogger(AutenticaClient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonAutenticaActionPerformed

    private void jButtonGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGrabarActionPerformed
      saveCertificate();
    }//GEN-LAST:event_jButtonGrabarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        String dn = "";
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AutenticaClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AutenticaClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AutenticaClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AutenticaClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        try {
            System.setProperty("es.gob.jmulticard.fastmode", "true");

            iniKeyStore();

            final Enumeration<String> aliases = dniKS.aliases();
            while (aliases.hasMoreElements()) {
                System.out.println(aliases.nextElement());
            }

           
            infoBox("Hola " + user.getName(), "Bienvenido");

        } catch (KeyStoreException ex) {
            Logger.getLogger(AutenticaClient.class.getName()).log(Level.SEVERE, null, ex);
            dniKS = null;
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AutenticaClient().setVisible(true);

            }
        });

    }

    public static String alias = "CertFirmaDigital";
    private static Provider dniProvider = null;
    private static KeyStore dniKS = null;
    private static X509Certificate authCert = null;

    /**
     * @param args the command line arguments
     */
    public static void infoBox(String infoMessage, String titleBar) {
        JOptionPane.showMessageDialog(null, infoMessage, titleBar, JOptionPane.INFORMATION_MESSAGE);
    }

    private static void iniKeyStore() throws KeyStoreException {
        if (dniKS == null) {
           //TODO inicializar el KeyStore 
        }
    }

     public void saveCertificate(RSAPublicKey rsa) {
        try {

            // Se obtiene el motor de firma y se inicializa
            FileOutputStream keyfos = new FileOutputStream("public.key");
            
            byte encodedKey[] = rsa.getEncoded();

            String rsakey = rsa.getFormat() + " " + rsa.getAlgorithm() + rsa.toString();
            System.out.println(rsakey);
            keyfos.write(encodedKey);
            keyfos.close();
            //Certificate authCert = ks.getCertificate("CertFirmaDigital");
        } catch (IOException ex) {
            Logger.getLogger(AutenticaClient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * Devuelve los datos de entrada firmados en Base64
     *
     * @param data Datos a firmar
     * @return
     */
    private String doAuth(String data) throws SignatureError {

        //TODO realizar aquí la firma y crear el método de conexión aparte
        return null;
    }

    public class SignatureError extends Exception {

        private SignatureError(String message) {
            super(message);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JLabel jApellidos;
    private javax.swing.JButton jButtonAutentica;
    private static javax.swing.JButton jButtonGrabar;
    private static javax.swing.JLabel jDNI;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabel_apellidos;
    private javax.swing.JLabel jLabel_dni;
    private static javax.swing.JLabel jName;
    // End of variables declaration//GEN-END:variables
}
